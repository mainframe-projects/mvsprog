//BRXGEN   JOB CLASS=C,REGION=0K
//IDCAMS   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE ALIAS (NAME(BREXX) RELATE(SYS1.UCAT.TSO)) -
         CATALOG(SYS1.VMASTCAT/SECRET)
  SET MAXCC=0
/*
//
        /*REXX PROGRAM TO SIMULATE THE PROBLEM OF 100 PRISONERS:  RANDOM,  AND OPTIMAL STRATEGY.*/
        PARSE ARG MEN TRIALS SEED .                      /*OBTAIN OPTIONAL ARGUMENTS FROM THE CL*/
        IF    MEN=='' |    MEN==","  THEN    MEN=    100 /*NUMBER OF   PRISONERS   FOR THIS RUN.*/
        IF TRIALS=='' | TRIALS==","  THEN TRIALS= 100000 /*  "     "  SIMULATIONS   "    "   "  */
        IF DATATYPE(SEED, 'W')  THEN CALL RANDOM ,,SEED  /*SEED FOR THE RANDOM NUMBER GENERATOR.*/
        TRY= MEN % 2;                SWAPS= MEN * 3      /*NUMBER TRIES FOR SEARCHING FOR A CARD*/
        $.1= ' A SIMPLE ';           $.2= "AN OPTIMAL"   /*LITERALS USED FOR THE SAY INSTRUCTION*/
        SAY CENTER(' RUNNING'  COMMAS(TRIALS)   "TRIALS WITH"  COMMAS(MEN)  'PRISONERS ', 70, "═")
        SAY
            DO STRATEGY=1  FOR 2;    PARDONS= 0          /*PERFORM THE TWO TYPES OF STRATEGIES. */
         
              DO TRIALS;             CALL GCARDS         /*DO TRIALS FOR A STRATEGY;  GEN CARDS.*/
                DO P=1  FOR MEN  UNTIL FAILURE           /*HAVE EACH PRISONER GO THROUGH PROCESS*/
                IF STRATEGY==1  THEN FAILURE= SIMPLE()   /*IS 1ST STRATEGY?  USE SIMPLE STRATEGY*/
                                ELSE FAILURE= PICKER()   /* " 2ND     "       "  OPTIMAL   "    */
                END   /*P*/                              /*FAILURE ≡ 1?  THEN A PRISONER FAILED.*/
              IF #==MEN  THEN PARDONS= PARDONS + 1       /*WAS THERE A PARDON OF ALL PRISONERS? */
              END     /*TRIALS*/                         /*IF 1 PRISONER FAILS, THEN THEY ALL DO*/
         
            PC= FORMAT( PARDONS/TRIALS*100, , 3);                           _= LEFT('', PC<10)
            SAY RIGHT('USING', 9)  $.STRATEGY  "STRATEGY YIELDS PARDONS "   _||PC"%  OF THE TIME."
            END       /*STRATEGY*/
        EXIT                                             /*STICK A FORK IN IT,  WE'RE ALL DONE. */
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        COMMAS:  PARSE ARG _;  DO C=LENGTH(_)-3  TO 1  BY -3; _= INSERT(',', _, C); END;  RETURN _
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        GCARDS: #= 0;                DO J=1  FOR MEN;  @.J= J             /*DEFINE SEQ. OF CARDS*/
                                     END   /*J*/                          /*SAME AS SEQ. OF MEN.*/
                       DO SWAPS;             A= RANDOM(1, MEN)            /*GET 1ST RAND NUMBER.*/
                           DO UNTIL  B\==A;  B= RANDOM(1, MEN)            /* "  2ND   "     "   */
                           END   /*UNTIL*/                                /* [↑] ENSURE A ¬== B */
                       PARSE VALUE  @.A @.B  WITH  @.B @.A                /*SWAP 2 RANDOM CARDS.*/
                       END       /*SWAPS*/;  RETURN
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        SIMPLE: !.= 0; DO TRY;         DO UNTIL !.?==0; ?= RANDOM(1, MEN) /*GET RANDOM CARD ··· */
                                       END   /*UNTIL*/                    /*··· NOT USED BEFORE.*/
                       IF @.?==P  THEN DO;   #= #+1;  RETURN 0;  END      /*FOUND HIS OWN CARD? */
                       !.?= 1                                             /*FLAG AS BEING USED. */
                       END   /*TRY*/;        RETURN 1                     /*DIDN'T FIND HIS CARD*/
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        PICKER: ?= P;  DO TRY; IF @.?==P  THEN DO;   #= #+1;    RETURN 0  /*FOUND HIS OWN CARD? */
                                               END       /* [↑]  INDICATE SUCCESS FOR PRISONER. */
                       ?= @.?                            /*CHOOSE NEXT DRAWER FROM CURRENT CARD.*/
                       END   /*TRY*/;        RETURN 1    /*CHOOSE HALF OF THE NUMBER OF DRAWERS.*/


