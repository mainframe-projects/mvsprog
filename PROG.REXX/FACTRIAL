//BRXGEN   JOB CLASS=C,REGION=0K
//IDCAMS   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE ALIAS (NAME(BREXX) RELATE(SYS1.UCAT.TSO)) -
         CATALOG(SYS1.VMASTCAT/SECRET)
  SET MAXCC=0
/*
//
/*REXX program  computes  the  factorial of a  non-negative integer.                    */
        NUMERIC DIGITS 100000                            /*100K DIGITS:  HANDLES  N  UP TO  25K.*/
        PARSE ARG N                                      /*OBTAIN OPTIONAL ARGUMENT FROM THE CL.*/
        IF N=''                   THEN CALL ER  'NO ARGUMENT SPECIFIED.'
        IF ARG()>1 | WORDS(N)>1   THEN CALL ER  'TOO MANY ARGUMENTS SPECIFIED.'
        IF \DATATYPE(N,'N')       THEN CALL ER  "ARGUMENT ISN'T NUMERIC: "          N
        IF \DATATYPE(N,'W')       THEN CALL ER  "ARGUMENT ISN'T A WHOLE NUMBER: "   N
        IF N<0                    THEN CALL ER  "ARGUMENT CAN'T BE NEGATIVE: "      N
        !=1                                              /*DEFINE THE FACTORIAL PRODUCT (SO FAR)*/
              DO J=2  TO N;       !=!*J                  /*COMPUTE THE FACTORIAL THE HARD WAY.  */
              END   /*J*/                                /* [↑]  WHERE DA RUBBER MEETS DA ROAD. */
         
        SAY N'!  IS  ['LENGTH(!) "DIGITS]:"              /*DISPLAY NUMBER OF DIGITS IN FACTORIAL*/
        SAY                                              /*ADD SOME WHITESPACE TO THE OUTPUT.   */
        SAY !                                            /*DISPLAY THE FACTORIAL PRODUCT.       */
        EXIT                                             /*STICK A FORK IN IT,  WE'RE ALL DONE. */
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        ER:    SAY;       SAY '***ERROR***';      SAY;      SAY ARG(1);      SAY;          EXIT 13


