//BRXGEN   JOB CLASS=C,REGION=0K
//IDCAMS   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE ALIAS (NAME(BREXX) RELATE(SYS1.UCAT.TSO)) -
         CATALOG(SYS1.VMASTCAT/SECRET)
  SET MAXCC=0
/*
//
        /*REXX PROGRAM  DISPLAYS  THE  MOVES  TO SOLVE  THE  TOWER OF HANOI  (WITH  N  DISKS).  */
        PARSE ARG N .                                    /*GET OPTIONAL NUMBER OF DISKS FROM CL.*/
        IF N=='' | N==","  THEN N=3                      /*NOT SPECIFIED?  THEN USE THE DEFAULT.*/
        #= 0                                             /*#:  THE NUMBER OF DISK MOVES (SO FAR)*/
        Z= 2**N  -  1                                    /*Z:   "     "    " MINIMUM # OF MOVES.*/
        CALL MOV  1, 3, N                                /*MOVE THE TOP DISK,  THEN RECURSE ··· */
        SAY                                              /* [↓]  DISPLAY THE MINIMUM # OF MOVES.*/
        SAY 'THE MINIMUM NUMBER OF MOVES TO SOLVE A '      N"─DISK  TOWER OF HANOI IS "     Z
        EXIT                                             /*STICK A FORK IN IT,  WE'RE ALL DONE. */
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        MOV: PROCEDURE EXPOSE # Z; PARSE ARG  @1,@2,@3;          L= LENGTH(Z)
             IF @3==1  THEN DO;  #= # + 1                /*BUMP THE (DISK) MOVE COUNTER BY ONE. */
                                 SAY 'STEP'   RIGHT(#, L)":  MOVE DISK ON TOWER"   @1  '───►'   @2
                            END
                       ELSE DO;  CALL MOV @1,               6 -@1 -@2,         @3 -1
                                 CALL MOV @1,               @2,                  1
                                 CALL MOV 6 - @1 - @2,      @2,                @3 -1
                            END
             RETURN                                      /* [↑]  THIS SUBROUTINE USES RECURSION.*/

