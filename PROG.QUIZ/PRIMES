PRIMES - Sieve of Eratosthenes
""""""""""""""""""""""""""""""



THE PROBLEM

List all prime numbers under a given target number (say 1000). 

It is suggested that the programmer creates a limit variable and then
calculates all prime numbers upto that value (to enable easy changes ... this
allows the user to put a higher value in the variable to calculate more prime
numbers which makes the program take longer and enable the user to tune
compiler settings as well as finding larger prime numbers)



HISTORY - Sieve of Eratosthenes

In mathematics, the Sieve of Eratosthenes is a simple, ancient algorithm for
finding all prime numbers up to any given limit.

It does so by iteratively marking as composite (i.e., not prime) the multiples
of each prime, starting with the first prime number, 2. The multiples of a
given prime are generated as a sequence of numbers starting from that prime,
with constant difference between them that is equal to that prime. This is the
sieve's key distinction from using trial division to sequentially test each
candidate number for divisibility by each prime.

The earliest known reference to the sieve is in Nicomachus of Gerasa's
Introduction to Arithmetic, which describes it and attributes it to
Eratosthenes of Cyrene, a Greek mathematician.

One of a number of prime number sieves, it is one of the most efficient ways to
find all of the smaller primes. It may be used to find primes in arithmetic
progressions.



ALGORITHM

A prime number is a natural number that has exactly two distinct natural number
divisors: 1 and itself.

To find all the prime numbers less than or equal to a given integer n by
Eratosthenes' method:

Create a list of consecutive integers from 2 through n: (2, 3, 4, ..., n).
Initially, let p equal 2, the smallest prime number.  Enumerate the multiples
of p by counting in increments of p from 2p to n, and mark them in the list
(these will be 2p, 3p, 4p, ...; the p itself should not be marked).  Find the
first number greater than p in the list that is not marked. If there was no
such number, stop. Otherwise, let p now equal this new number (which is the
next prime), and repeat from step 3.  When the algorithm terminates, the
numbers remaining not marked in the list are all the primes below n.  The main
idea here is that every value given to p will be prime, because if it were
composite it would be marked as a multiple of some other, smaller prime. Note
that some of the numbers may be marked more than once (e.g., 15 will be marked
both for 3 and 5).

As a refinement, it is sufficient to mark the numbers in step 3 starting from
p2, as all the smaller multiples of p will have already been marked at that
point. This means that the algorithm is allowed to terminate in step 4 when p2
is greater than n.[1]

Another refinement is to initially list odd numbers only, (3, 5, ..., n), and
count in increments of 2p from p2 in step 3, thus marking only odd multiples of
p. This actually appears in the original algorithm.[1] This can be generalized
with wheel factorization, forming the initial list only from numbers coprime
with the first few primes and not just from odds (i.e., numbers coprime with
2), and counting in the correspondingly adjusted increments so that only such
multiples of p are generated that are coprime with those small primes, in the
first place.[6]



SOURCES

Wikipedia       https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes
