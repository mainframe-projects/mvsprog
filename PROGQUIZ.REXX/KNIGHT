//BRXGEN   JOB CLASS=C,REGION=0K
//IDCAMS   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  DEFINE ALIAS (NAME(BREXX) RELATE(SYS1.UCAT.TSO)) -
         CATALOG(SYS1.VMASTCAT/SECRET)
  SET MAXCC=0
/*
//
        /*REXX PROGRAM SOLVES THE  KNIGHT'S TOUR  PROBLEM   FOR A  (GENERAL)   NXN   CHESSBOARD.*/
        PARSE ARG  N  SRANK SFILE .                      /*OBTAIN OPTIONAL ARGUMENTS FROM THE CL*/
        IF     N=='' |     N==","  THEN     N=8          /*NO BOARDSIZE SPECIFIED?  USE DEFAULT.*/
        IF SRANK=='' | SRANK==","  THEN SRANK=N          /*NO STARTING RANK GIVEN?   "      "   */
        IF SFILE=='' | SFILE==","  THEN SFILE=1          /* "     "    FILE   "      "      "   */
        NN=N**2;            NXN='A ' N"X"N ' CHESSBOARD' /*FILE [↓]           [↓]   R=RANK      */
        @.=;    DO R=1  FOR N;  DO F=1  FOR N;  @.R.F=.;  END  /*F*/;   END  /*R*/
        BEG= '-1-'                                       /*[↑]  CREATE AN EMPTY  NXN CHESSBOARD.*/
                       KR =  '2  1 -1 -2  -2 -1  1  2'   /*THE LEGAL "RANK"  MOVES FOR A KNIGHT.*/
                       KF =  '1  2  2  1  -1 -2 -2 -1'   /* "    "   "FILE"    "    "  "    "   */
        KR.M=WORDS(KR)                                   /*NUMBER OF POSSIBLE MOVES FOR A KNIGHT*/
        PARSE VAR  KR  KR.1 KR.2 KR.3 KR.4 KR.5 KR.6 KR.7 KR.8   /*PARSE THE LEGAL MOVES BY HAND*/
        PARSE VAR  KF  KF.1 KF.2 KF.3 KF.4 KF.5 KF.6 KF.7 KF.8   /*  "    "    "     "    "   " */
        @.SRANK.SFILE= BEG                               /*THE KNIGHT'S STARTING POSITION.      */
        @KT= "KNIGHT'S TOUR"                             /*A HANDY-DANDY LITERAL FOR THE  SAYS. */
        IF \MOVE(2, SRANK, SFILE)  &  \(N==1)  THEN SAY 'NO'   @KT   "SOLUTION FOR"         NXN'.'
                                               ELSE SAY 'A SOLUTION FOR THE'   @KT   "ON"   NXN':'
        !=LEFT('', 9 * (N<18) )                          /*USED FOR INDENTATION OF CHESSBOARD.  */
        _=SUBSTR(COPIES("┼───",N),2);   SAY;   SAY  ! TRANSLATE('┌'_"┐", '┬', "┼")   /*A SQUARE.*/
                                                         /* [↓]  BUILD A DISPLAY FOR CHESSBOARD.*/
             DO   R=N  FOR N  BY -1;    IF R\==N  THEN SAY ! '├'_"┤";        L=@.
               DO F=1  FOR N; ?=@.R.F;  IF ?==NN  THEN ?='END';  L=L'│'CENTER(?, 3)  /*IS "END"?*/
               END   /*F*/                               /*DONE WITH   RANK   OF THE CHESSBOARD.*/
             SAY ! TRANSLATE(L'│', , .)                  /*DISPLAY A     "     "  "       "     */
             END     /*R*/                               /*19X19 CHESSBOARD CAN BE SHOWN 80 COLS*/
         
        SAY  !  TRANSLATE('└'_"┘", '┴', "┼")             /*SHOW THE LAST RANK OF THE CHESSBOARD.*/
        EXIT                                             /*STICK A FORK IN IT,  WE'RE ALL DONE. */
        /*──────────────────────────────────────────────────────────────────────────────────────*/
        MOVE: PROCEDURE EXPOSE @. KR. KF. NN;    PARSE ARG #,RANK,FILE  /*OBTAIN MOVE,RANK,FILE.*/
                 DO T=1  FOR KR.M;   NR=RANK+KR.T;       NF=FILE+KF.T   /*POSITION OF THE KNIGHT*/
                 IF @.NR.NF==.  THEN DO;                 @.NR.NF=#      /*EMPTY? KNIGHT CAN MOVE*/
                                     IF #==NN            THEN RETURN 1  /*IS THIS THE LAST MOVE?*/
                                     IF MOVE(#+1,NR,NF)  THEN RETURN 1  /* "   "   "    "    "  */
                                     @.NR.NF=.                          /*UNDO THE ABOVE MOVE.  */
                                     END                                /*TRY DIFFERENT MOVE.   */
                 END   /*T*/                                            /* [↑]  ALL MOVES TRIED.*/
              RETURN 0                                                  /*TOUR IS NOT POSSIBLE. */


