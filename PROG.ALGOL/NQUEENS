//ALGOL EXEC PGM=ALGOL,REGION=48K                                       00020000
//SYSPRINT DD SYSOUT=A                                                  00040000
//SYSPUNCH DD SYSOUT=B                                                  00060000
//SYSLIN DD DSN=&LOADSET,UNIT=SYSSQ,SEP=SYSPUNCH,SPACE=(3600,(10,4)),  *00080000
//          DISP=(MOD,PASS)                                             00100000
//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSSQ,SEP=SYSPRINT,SPACE=(1024,(50,10))    00120000
//SYSUT2 DD DSN=&SYSUT2,UNIT=SYSSQ,SEP=SYSUT1,SPACE=(1024,(50,10))      00140000
//SYSUT3 DD DSN=&SYSUT3,UNIT=SYSDA,SPACE=(1024,(40,10))                 00160000
//LKED EXEC PGM=IEWL,PARM='XREF,LIST,LET',COND=(5,LT,ALGOL),REGION=96K  00180000
//SYSPRINT DD SYSOUT=A                                                  00200000
//SYSLIN DD DSN=&LOADSET,DISP=(OLD,DELETE)                              00220000
//       DD DDNAME=SYSIN                                                00240000
//SYSLIB DD DSN=SYS1.ALGLIB,DISP=SHR                                    00260000
//SYSLMOD DD DSN=&GOSET(GO),UNIT=SYSDA,DISP=(MOD,PASS),                *00280000
//           SPACE=(1024,(50,20,1))                                     00300000
//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=(SYSLIB,SYSLMOD),               *00320000
//          SPACE=(1024,(50,20))                                        00340000
//GO EXEC PGM=*.LKED.SYSLMOD,COND=((5,LT,ALGOL),(5,LT,LKED))            00360000
//ALGLDD01 DD SYSOUT=A                                                  00380000
//SYSPRINT DD SYSOUT=A                                                  00400000
//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSSQ,SPACE=(1024,(20,10))                 00420000
        INT OFS = 1, # ALGOL68 NORMALLY USES ARRAY OFFSET OF 1 #
            DIM = 8; # DIM X DIM CHESS BOARD #
        [OFS:DIM+OFS-1]INT B;
         
        PROC UNSAFE = (INT Y)BOOL:(
          INT I, T, X;
          X := B[Y];
          FOR I TO Y - LWB B DO
            T := B[Y - I];
            IF T = X THEN BREAK TRUE
            ELIF T = X - I THEN BREAK TRUE
            ELIF T = X + I THEN BREAK TRUE
            FI
          OD;
          FALSE EXIT
        BREAK TRUE:
          TRUE
        );
         
        INT S := 0;
         
        PROC PRINT BOARD = VOID:(
          INT X, Y;
          PRINT((NEW LINE, "SOLUTION # ", S+:=1, NEW LINE));
          FOR Y FROM LWB B TO UPB B DO 
            FOR X FROM LWB B TO UPB B DO
              PRINT("|"+(B[Y]=X|"Q"|: ODD(X+Y)|"/"|" "))
            OD;
            PRINT(("|", NEW LINE))
          OD
        );
         
        MAIN: (
          INT Y := LWB B;
          B[LWB B] := LWB B - 1;
          FOR I WHILE Y >= LWB B DO
            WHILE
              B[Y]+:=1;
          # BREAK # IF B[Y] <= UPB B THEN UNSAFE(Y) ELSE FALSE FI 
            DO SKIP OD;
            IF B[Y] <= UPB B  THEN
              IF Y < UPB B THEN
                B[Y+:=1] := LWB B - 1
              ELSE
                PRINT BOARD
              FI
            ELSE
              Y-:=1
            FI
          OD
        )

